{"remainingRequest":"C:\\Users\\aamen\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\aamen\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\aamen\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\aamen\\vue\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\aamen\\vue\\src\\App.vue","mtime":1610588164849},{"path":"C:\\Users\\aamen\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aamen\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\aamen\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aamen\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    id=\"app\"\n    class=\"small-container\"\n  >\n    <h1>Employees</h1>\n\n    <employee-form @add:employee=\"addEmployee\" />\n    <employee-table\n      :employees=\"employees\"\n      @delete:employee=\"deleteEmployee\"\n      @edit:employee=\"editEmployee\"\n    />\n  </div>\n</template>\n\n<script>\nimport EmployeeTable from '@/components/EmployeeTable.vue'\nimport EmployeeForm from '@/components/EmployeeForm.vue'\nexport default {\n  name: \"app\",\n  components: {\n    EmployeeTable,\n    EmployeeForm,\n  },\n  data() {\n    return {\n      employees: []\n    }\n  },\n  mounted() {\n    this.getEmployees()\n  },\n  methods: {\n    async getEmployees() {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users')\n        const data = await response.json()\n        this.employees = data\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async addEmployee(employee) {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users', {\n          method: 'POST',\n          body: JSON.stringify(employee),\n          headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n        })\n        const data = await response.json()\n        this.employees = [...this.employees, data]\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async editEmployee(id, updatedEmployee) {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: 'PUT',\n          body: JSON.stringify(updatedEmployee),\n          headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n        })\n        const data = await response.json()\n        this.employees = this.employees.map(employee => employee.id === id ? data : employee)\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async deleteEmployee(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: 'DELETE'\n        })\n        this.employees = this.employees.filter(employee => employee.id !== id)\n      } catch (error) {\n        console.error(error)\n      }\n    },\n  },\n}\n</script>\n\n<style>\nbutton {\n  background: #009435;\n  border: 1px solid #009435;\n}\nbutton:hover,\nbutton:active,\nbutton:focus {\n  background: #32a95d;\n  border: 1px solid #32a95d;\n}\n.small-container {\n  max-width: 680px;\n}\n</style>"],"sourceRoot":"src"}]}